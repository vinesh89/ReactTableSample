{"ast":null,"code":"import eachWeekendOfInterval from '../eachWeekendOfInterval/index.js';\nimport startOfYear from '../startOfYear/index.js';\nimport endOfYear from '../endOfYear/index.js';\n/**\n * @name eachWeekendOfYear\n * @category Year Helpers\n * @summary List all the Saturdays and Sundays in the year.\n *\n * @description\n * Get all the Saturdays and Sundays in the year.\n *\n * @param {Date|String|Number} date - the given year\n * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Lists all Saturdays and Sundays in the year\n * var result = eachWeekendOfYear(new Date(2020, 1, 1))\n * //=> [\n *   2020-01-03T23:00:00.000Z,\n *   2020-01-04T23:00:00.000Z,\n *   2020-01-10T23:00:00.000Z,\n *   ...\n *   2020-12-26T23:00:00.000Z\n * ]\n */\n\nexport default function eachWeekendOfYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var startDate = startOfYear(dirtyDate, dirtyOptions);\n  var endDate = endOfYear(dirtyDate, dirtyOptions);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","map":null,"metadata":{},"sourceType":"module"}